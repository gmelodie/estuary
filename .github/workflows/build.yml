name: Build

on:
  workflow_call:
    outputs:
      ## LINUX AMD64 BINARIES
      estuary_linux_amd64:
        description: "Estuary binary for linux amd64"
        value: ${{ jobs.build_linux_amd64.outputs.estuary }}
      shuttle_linux_amd64:
        description: "Shuttle binary for linux amd64"
        value: ${{ jobs.build_linux_amd64.outputs.estuary-shuttle }}
      benchest_linux_amd64:
        description: "Benchest binary for linux amd64"
        value: ${{ jobs.build_linux_amd64.outputs.benchest }}
      bsget_linux_amd64:
        description: "Bsget binary for linux amd64"
        value: ${{ jobs.build_linux_amd64.outputs.bsget }}

      ## LINUX ARM BINARIES
      estuary_linux_arm64:
        description: "Estuary binary for linux arm64"
        value: ${{ jobs.build_linux_arm64.outputs.estuary }}
      shuttle_linux_arm64:
        description: "Shuttle binary for linux arm64"
        value: ${{ jobs.build_linux_arm64.outputs.estuary-shuttle }}
      benchest_linux_arm64:
        description: "Benchest binary for linux arm64"
        value: ${{ jobs.build_linux_arm64.outputs.benchest }}
      bsget_linux_arm64:
        description: "Bsget binary for linux arm64"
        value: ${{ jobs.build_linux_arm64.outputs.bsget }}

      ## MACOS AMD64 BINARIES
      estuary_macos_amd64:
        description: "Estuary binary for macos amd64"
        value: ${{ jobs.build_macos_amd64.outputs.estuary }}
      shuttle_macos_amd64:
        description: "Shuttle binary for macos amd64"
        value: ${{ jobs.build_macos_amd64.outputs.estuary-shuttle }}
      benchest_macos_amd64:
        description: "Benchest binary for macos amd64"
        value: ${{ jobs.build_macos_amd64.outputs.benchest }}
      bsget_macos_amd64:
        description: "Bsget binary for macos amd64"
        value: ${{ jobs.build_macos_amd64.outputs.bsget }}


jobs:
  build_linux_amd64:
    # Map the job outputs to step outputs
    outputs:
      estuary: "estuary"
      shuttle: "estuary-shuttle"
      benchest: "benchest"
      bsget: "bsget"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: ['linux/amd64']
        include:
        # add the GO naming convention for OS ($GOOS) and architecture ($GOARCH)
        # instead of using Linux' naming convention (version items).
          - version: linux/amd64
            OS: linux
            ARCH: amd64
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build binary for ${{ matrix.version }}
      run: |
        docker run --rm -v "$PWD":/usr/est/build -w /usr/est/build --platform=${{ matrix.version }} ${{ secrets.DOCKERHUB_ORG }}/estuary-base:latest /bin/sh -c "make"

  build_linux_arm64:
    outputs:
      estuary: "estuary"
      shuttle: "estuary-shuttle"
      benchest: "benchest"
      bsget: "bsget"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: ['linux/arm64']
        include:
        # add the GO naming convention for OS ($GOOS) and architecture ($GOARCH)
        # instead of using Linux' naming convention (version items).
          - version: linux/arm64
            OS: linux
            ARCH: arm64
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Install QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/arm64

    - name: Build binary for ${{ matrix.version }}
      run: |
        docker run --rm -v "$PWD":/usr/est/build -w /usr/est/build --platform=${{ matrix.version }} ${{ secrets.DOCKERHUB_ORG }}/estuary-base:linux-arm64" /bin/sh -c "cp /build/* extern/filecoin-ffi/ && touch extern/filecoin-ffi/.install-filcrypto && make"

  build_macos_amd64:
    outputs:
      estuary: "estuary"
      shuttle: "estuary-shuttle"
      benchest: "benchest"
      bsget: "bsget"
    runs-on: macos-latest
    strategy:
      matrix:
        version: ['darwin-amd64']
        include:
          - version: darwin-amd64
            OS: darwin
            ARCH: amd64
    steps:
    - name: Set up Go 1.17
      uses: actions/setup-go@v1
      id: go
      with:
        go-version: 1.17
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install dependencies
      run: |
        brew install bzr jq pkg-config rustup hwloc
        cargo install cargo-lipo
    - name: Build binary for macOS
      run: |
        export PATH=/System/Volumes/Data/Users/runner/go/bin:$PATH
        make
